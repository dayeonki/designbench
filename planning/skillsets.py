ai_tools = [
    {"function": "CreateDocument[docType]", "description": "Create new document with pre-defined dimensions.", "parameters": {"docType": "Document type (postcard, letter, poster, magazine cover, label, book cover, business card, resume, flyer) [str]"}, "example": "CreateDocument[postcard] would create new document with postcard dimension."},
    {"function": "CreateDocumentCustom[width, height]", "description": "Create new document with desired width and height values.", "parameters": {"width": "Width of the document in points [int]", "height": "Height of the document in points [int]"}, "example": "CreateDocumentCustom[612,792] would create new document with 612 x 792 points dimension."},
    {"function": "SaveDocument[fileName, format]", "description": "Save current document into desired format.", "parameters": {"fileName": "Name of the file to save. [str]", "format": "Format of the saved file (pdf, png, psd for Photoshop, ai for Illustrator, indd for InDesign) [str]"}, "example": "SaveDocument[myDocument, pdf] would save the current document as myDocument.pdf."},
    {"function": "SetBackgroundColor[red, green, blue]", "description": "Set the background color to desired color.", "parameters": {"red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "SetBackgroundColor[0,0,0] would set the current background color as black."},
    {"function": "AlignText[layerName, alignment]", "description": "Align text to desired alignment.", "parameters": {"layerName": "Name of layer to adjust alignment [str]", "alignment": "Alignment of text (left, center, right) [str]"}, "example": "AlignText[TextLayer,left] would align the text in TextLayer to left."},
    {"function": "ApplyFont[layerName, fontName]", "description": "Apply font to text.", "parameters": {"layerName": "Name of layer to apply font [str]", "fontName": "Name of font to apply [str]"}, "example": "ApplyFont[TextLayer,Ayuthaya] would apply the font Ayuthaya to text in TextLayer."},
    {"function": "ArrangeText[layerName, arrangement]", "description": "Arrange text to desired arrangement.", "parameters": {"layerName": "Name of layer to adjust arrangement [str]", "arrangement": "Arrange of text (front, frontward, backward, back) [str]"}, "example": "ArrangeText[TextLayer,front] would arrange the text in TextLayer to front."},
    {"function": "ColorText[layerName, red, green, blue]", "description": "Change text to desired color.", "parameters": {"layerName": "Name of layer to change color [str]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "ColorText[TextLayer,0,0,0] would change the color of text in TextLayer to black."},
    {"function": "CreateText[layerName, textString]", "description": "Create text (default to Arial font)", "parameters": {"layerName": "Name of layer to create text [str]", "textString": "Text input to write in the layer [str]"}, "example": "CreateText[TextLayer,Hello World!] would create a new text layer named TextLayer with Hello World! content."},
    {"function": "OpacityText[layerName, opacity]", "description": "Adjust opacity of text.", "parameters": {"layerName": "Name of layer to adjust opacity [str]", "opacity": "Opacity value (0-100) [int]"}, "example": "OpacityText[TextLayer,20] would adjust the opacity of the text in TextLayer to 20%."},
    {"function": "RemoveText[layerName]", "description": "Remove text.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveText[TextLayer] would remove the TextLayer."},
    {"function": "RepositionText[layerName, posX, posY]", "description": "Reposition text to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position (in mm) [float]", "posY": "New y-axis postiion (in mm) [float]"}, "example": "RepositionText[TextLayer,10,10] would reposition the TextLayer to (10,10) position."},
    {"function": "ResizeText[layerName, fontSize]", "description": "Resize text to desired font size.", "parameters": {"layerName": "Name of layer to resize [str]", "fontSize": "Size of the font in points [int]"}, "example": "ResizeText[TextLayer,30] would resize the TextLayer to font size 30pt."},
    {"function": "RotateText[layerName, angle]", "description": "Rotate text to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new text [float]"}, "example": "RotateText[TextLayer,90] would rotate the TextLayer to 90 angle."},
    {"function": "RetrieveFontStyle[layerName]", "description": "Retrieve font information of text: font family, font name, and font style.", "parameters": {"layerName": "Name of layer to retrieve font information [str]"}, "example": "RetrieveFontStyle[TextLayer] would retrieve the information of font family, font name, and font style of text in TextLayer."},
    {"function": "StrokeText[layerName, strokeWidth, red, green, blue]", "description": "Adjust stroke of text with desired width and color.", "parameters": {"layerName": "Name of layer to adjust stroke [str]", "strokeWidth": "Width of stroke (0.5-5) [float]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "StrokeText[TextLayer,2,0,0,0] would adjust the stroke of TextLayer to width 2 and black color."},
    {"function": "ImportObject[fileName, layerName]", "description": "Import image or object from file path.", "parameters": {"fileName": "Name of file to import (need to give the full path of the file) [str]", "layerName": "Name of layer to import file [str]"}, "example": "ImportObject[/path/to/myImage.jpg,ObjectLayer] would import myImage.jpg to ObjectLayer."},
    {"function": "OpacityObject[layerName, opacity]", "description": "Adjust opacity of object.", "parameters": {"layerName": "Name of layer to adjust opacity [str]", "opacity": "Opacity value (0-100) [int]"}, "example": "OpacityObject[ObjectLayer,20] would adjust the opacity of ObjectLayer to 20%."},
    {"function": "RemoveObject[layerName]", "description": "Remove object.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveObject[ObjectLayer] would remove the ObjectLayer."},
    {"function": "RepositionObject[layerName, posX, posY]", "description": "Reposition object to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position [float]", "posY": "New y-axis postiion [float]"}, "example": "RepositionObject[ObjectLayer,10,10] would reposition the ObjectLayer to (10,10) position."},
    {"function": "ResizeObject[layerName, width, height]", "description": "Resize object to desired width and height.", "parameters": {"layerName": "Name of layer to resize [str]", "width": "Width of new object [float]", "height": "Height of new object [float]"}, "example": "ResizeObject[ObjectLayer,30,30] would resize the ObjectLayer to width 30 and height 30."},
    {"function": "RotateObject[layerName, angle]", "description": "Rotate object to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new object [float]"}, "example": "RotateObject[ObjectLayer,90] would rotate the ObjectLayer to 90 angle."},
    
    {"function": "DrawCircle[layerName, radius, red, green, blue]", "description": "Draw circle of desired radius and color.", "parameters": {"layerName": "Name of layer to draw circle [str]", "radius": "Radius of the circle (0-100) [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawCircle[CircleLayer,3,0,0,0] would draw a black circle layer named CircleLayer with radius 3."},
    {"function": "DrawEllipse[layerName, majorRadius, minorRadius, red, green, blue]", "description": "Draw ellipse of desired radius and color.", "parameters": {"layerName": "Name of layer to draw ellipse [str]", "majorRadius": "Major radius of the ellipse (0-100) [int]", "radius": "Minor radius of the ellipse (0-100) [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawEllipse[EllipseLayer,5,3,0,0,0] would draw a black ellipse layer named EllipseLayer with major radius 5 and minor radius 3."},
    {"function": "DrawLine[layerName, startX, startY, endX, endY, strokeWidth, red, green, blue]", "description": "Draw line of desired length, stroke, and color.", "parameters": {"layerName": "Name of layer to draw line [str]", "startX": "Starting x-axis position of line [float]", "startY": "Starting y-axis position of line [float]", "endX": "Ending x-axis position of line [float]", "endY": "Ending y-axis position of line [float]", "strokeWidth": "Width of the stroke of the line (0.5-5) [float]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawLine[LineLayer,0,0,10,10,2,0,0,0] would draw a black line layer named LineLayer starting from (0,0) to (10,10) with stroke width 2."},
    {"function": "DrawPolygon[layerName, sides, radius, red, green, blue]", "description": "Draw polygon of desired number of sides, radius, and color.", "parameters": {"layerName": "Name of layer to draw polygon [str]", "sides": "Number of sides of the polygon [int]", "radius": "Radius of the polygon (0-100) [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawPolygon[PolygonLayer,5,3,0,0,0] would draw a black polygon layer named PolygonLayer with 5 sides and radius of 3."},
    {"function": "DrawRectangle[layerName, width, height, red, green, blue]", "description": "Draw rectangle of desired width, height, and color.", "parameters": {"layerName": "Name of layer to draw rectangle [str]", "width": "Width of the rectangle [int]", "height": "Height of the rectangle [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawRectangle[RectangleLayer,5,3,0,0,0] would draw a black rectangle layer named RectangleLayer with width 5 and height 3."},
    {"function": "DrawStar[layerName, numPoints, radius, red, green, blue]", "description": "Draw star of desired number of points, radius, and color.", "parameters": {"layerName": "Name of layer to draw star [str]", "numPoints": "Number of points of the star [int]", "radius": "Radius of the star (0-100) [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawStar[StarLayer,5,3,0,0,0] would draw a black star layer named StarLayer with 5 points and radius of 3."},
    {"function": "DrawTriangle[layerName, base, height, red, green, blue]", "description": "Draw triangle of desired base, height, and color.", "parameters": {"layerName": "Name of layer to draw triangle [str]", "base": "Base of the triangle [int]", "height": "Height of the triangle [int]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "DrawTriangle[TriangleLayer,5,3,0,0,0] would draw a black triangle layer named TriangleLayer with base 5 and height 3."},
    {"function": "OpacityDrawing[layerName, opacity]", "description": "Adjust opacity of the drawing.", "parameters": {"layerName": "Name of layer to adjust opacity [str]", "opacity": "Opacity value (0-100) [int]"}, "example": "OpacityDrawing[TriangleLayer,20] would adjust the opacity of the TriangleLayer to 20%."},
    {"function": "RemoveDrawing[layerName]", "description": "Remove drawing.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveDrawing[TriangleLayer] would remove the TriangleLayer."},
    {"function": "RepositionDrawing[layerName, posX, posY]", "description": "Reposition drawing to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position [float]", "posY": "New y-axis postiion [float]"}, "example": "RepositionDrawing[TriangleLayer,10,10] would reposition the TriangleLayer to (10,10) position."},
    {"function": "ResizeDrawing[layerName, width, height]", "description": "Resize drawing to desired width and height.", "parameters": {"layerName": "Name of layer to resize [str]", "width": "Width of new drawing [float]", "height": "Height of new drawing [float]"}, "example": "ResizeDrawing[TriangleLayer,30,30] would resize the TriangleLayer to width 30 and height 30."},
    {"function": "RotateDrawing[layerName, angle]", "description": "Rotate drawing to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new drawing [float]"}, "example": "RotateDrawing[TriangleLayer,90] would rotate the TriangleLayer to 90 angle."},
    {"function": "StrokeDrawing[layerName, strokeWidth, red, green, blue]", "description": "Adjust stroke of drawing with desired width and color.", "parameters": {"layerName": "Name of layer to adjust stroke [str]", "strokeWidth": "Width of stroke (0.5-5) [float]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "StrokeDrawing[TriangleLayer,2,0,0,0] would adjust the stroke of TriangleLayer to width 2 and black color."}
]


id_tools = [
    {"function": "CreateDocument[docType]", "description": "Create new document with pre-defined dimensions.", "parameters": {"docType": "Document type (postcard, letter, poster, magazine cover, label, book cover, business card, resume, flyer) [str]"}, "example": "CreateDocument[postcard] would create new document with postcard dimension."},
    {"function": "CreateDocumentCustom[width, height]", "description": "Create new document with desired width and height values.", "parameters": {"width": "Width of the document in points [int]", "height": "Height of the document in points [int]"}, "example": "CreateDocumentCustom[612,792] would create new document with 612 x 792 points dimension."},
    {"function": "ExportDocument[fileName, format]", "description": "Export current document into desired format.", "parameters": {"fileName": "Name of the file to save. [str]", "format": "Format of the exported file (pdf, png, psd for Photoshop, ai for Illustrator, indd for InDesign) [str]"}, "example": "ExportDocument[myDocument, pdf] would export the current document as myDocument.pdf."},
    {"function": "SetBackgroundColor[red, green, blue]", "description": "Set the background color to desired color.", "parameters": {"red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "SetBackgroundColor[0,0,0] would set the current background color as black."},
    
    {"function": "AlignText[layerName, alignment]", "description": "Align text to desired alignment.", "parameters": {"layerName": "Name of layer to adjust alignment [str]", "alignment": "Alignment of text (left, center, right) [str]"}, "example": "AlignText[TextLayer,left] would align the text in TextLayer to left."},
    {"function": "ApplyFont[layerName, fontName]", "description": "Apply font to text.", "parameters": {"layerName": "Name of layer to apply font [str]", "fontName": "Name of font to apply [str]"}, "example": "ApplyFont[TextLayer,Ayuthaya] would apply the font Ayuthaya to text in TextLayer."},
    {"function": "ArrangeText[layerName, arrangement]", "description": "Arrange text to desired arrangement.", "parameters": {"layerName": "Name of layer to adjust arrangement [str]", "arrangement": "Arrange of text (front, frontward, backward, back) [str]"}, "example": "ArrangeText[TextLayer,front] would arrange the text in TextLayer to front."},
    {"function": "ColorText[layerName, red, green, blue]", "description": "Change text to desired color.", "parameters": {"layerName": "Name of layer to change color [str]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "ColorText[TextLayer,0,0,0] would change the color of text in TextLayer to black."},
    {"function": "CreateText[layerName, textString]", "description": "Create text (default to Arial font)", "parameters": {"layerName": "Name of layer to create text [str]", "textString": "Text input to write in the layer [str]"}, "example": "CreateText[TextLayer,Hello World!] would create a new text layer named TextLayer with Hello World! content."},
    {"function": "RemoveText[layerName]", "description": "Remove text.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveText[TextLayer] would remove the TextLayer."},
    {"function": "RepositionText[layerName, posX, posY]", "description": "Reposition text to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position (in mm) [float]", "posY": "New y-axis postiion (in mm) [float]"}, "example": "RepositionText[TextLayer,10,10] would reposition the TextLayer to (10,10) position."},
    {"function": "ResizeText[layerName, fontSize]", "description": "Resize text to desired font size.", "parameters": {"layerName": "Name of layer to resize [str]", "fontSize": "Size of the font in points [int]"}, "example": "ResizeText[TextLayer,30] would resize the TextLayer to font size 30pt."},
    {"function": "RotateText[layerName, angle]", "description": "Rotate text to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new text [float]"}, "example": "RotateText[TextLayer,90] would rotate the TextLayer to 90 angle."},
    {"function": "StrokeText[layerName, strokeWidth, red, green, blue]", "description": "Adjust stroke of text with desired width and color.", "parameters": {"layerName": "Name of layer to adjust stroke [str]", "strokeWidth": "Width of stroke (0.5-5) [float]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "StrokeText[TextLayer,2,0,0,0] would adjust the stroke of TextLayer to width 2 and black color."},
    
    {"function": "GenerateQRObject[layerName, linkURL]", "description": "Generate QR code with desired URL link embedded.", "parameters": {"layerName": "Name of layer to generate QR code [str]", "linkeURL": "URL link to embedded in the QR code [str]"}, "example": "GenerateQRObject[QRLayer,https://www.google.com] would create a QR code as QRLayer that has https://www.google.com link embedded."},
    {"function": "ImportObject[fileName, layerName]", "description": "Import image or object from file path.", "parameters": {"fileName": "Name of file to import (need to give the full path of the file) [str]", "layerName": "Name of layer to import file [str]"}, "example": "ImportObject[/path/to/myImage.jpg,ObjectLayer] would import myImage.jpg to ObjectLayer."},
    {"function": "RemoveObject[layerName]", "description": "Remove object.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveObject[ObjectLayer] would remove the ObjectLayer."},
    {"function": "RepositionObject[layerName, posX, posY]", "description": "Reposition object to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position [float]", "posY": "New y-axis postiion [float]"}, "example": "RepositionObject[ObjectLayer,10,10] would reposition the ObjectLayer to (10,10) position."},
    {"function": "ResizeObject[layerName, width, height]", "description": "Resize object to desired width and height.", "parameters": {"layerName": "Name of layer to resize [str]", "width": "Width of new object [float]", "height": "Height of new object [float]"}, "example": "ResizeObject[ObjectLayer,30,30] would resize the ObjectLayer to width 30 and height 30."},
    {"function": "RotateObject[layerName, angle]", "description": "Rotate object to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new object [float]"}, "example": "RotateObject[ObjectLayer,90] would rotate the ObjectLayer to 90 angle."}
]


ps_tools = [
    {"function": "CreateDocument[docType]", "description": "Create new document with pre-defined dimensions.", "parameters": {"docType": "Document type (postcard, letter, poster, magazine cover, label, book cover, business card, resume, flyer) [str]"}, "example": "CreateDocument[postcard] would create new document with postcard dimension."},
    {"function": "CreateDocumentCustom[width, height]", "description": "Create new document with desired width and height values.", "parameters": {"width": "Width of the document in points [int]", "height": "Height of the document in points [int]"}, "example": "CreateDocumentCustom[612,792] would create new document with 612 x 792 points dimension."},
    {"function": "SaveDocument[fileName, format]", "description": "Save current document into desired format.", "parameters": {"fileName": "Name of the file to save. [str]", "format": "Format of the saved file (pdf, png, psd for Photoshop, ai for Illustrator, indd for InDesign) [str]"}, "example": "SaveDocument[myDocument, pdf] would save the current document as myDocument.pdf."},
    {"function": "SetBackgroundColor[red, green, blue]", "description": "Set the background color to desired color.", "parameters": {"red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "SetBackgroundColor[0,0,0] would set the current background color as black."},
   
    {"function": "AlignText[layerName, alignment]", "description": "Align text to desired alignment.", "parameters": {"layerName": "Name of layer to adjust alignment [str]", "alignment": "Alignment of text (left, center, right) [str]"}, "example": "AlignText[TextLayer,left] would align the text in TextLayer to left."},
    {"function": "ApplyFont[layerName, fontName]", "description": "Apply font to text.", "parameters": {"layerName": "Name of layer to apply font [str]", "fontName": "Name of font to apply [str]"}, "example": "ApplyFont[TextLayer,Ayuthaya] would apply the font Ayuthaya to text in TextLayer."},
    {"function": "ArrangeText[layerName, arrangement]", "description": "Arrange text to desired arrangement.", "parameters": {"layerName": "Name of layer to adjust arrangement [str]", "arrangement": "Arrange of text (front, frontward, backward, back) [str]"}, "example": "ArrangeText[TextLayer,front] would arrange the text in TextLayer to front."},
    {"function": "ColorText[layerName, red, green, blue]", "description": "Change text to desired color.", "parameters": {"layerName": "Name of layer to change color [str]", "red": "Red value for RGB (0-255) [int]", "green": "Green value for RGB (0-255) [int]", "blue": "Blue value for RGB (0-255) [int]"}, "example": "ColorText[TextLayer,0,0,0] would change the color of text in TextLayer to black."},
    {"function": "CreateText[layerName, textString]", "description": "Create text (default to Arial font)", "parameters": {"layerName": "Name of layer to create text [str]", "textString": "Text input to write in the layer [str]"}, "example": "CreateText[TextLayer,Hello World!] would create a new text layer named TextLayer with Hello World! content."},
    {"function": "OpacityText[layerName, opacity]", "description": "Adjust opacity of text.", "parameters": {"layerName": "Name of layer to adjust opacity [str]", "opacity": "Opacity value (0-100) [int]"}, "example": "OpacityText[TextLayer,20] would adjust the opacity of the text in TextLayer to 20%."},
    {"function": "RemoveText[layerName]", "description": "Remove text.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveText[TextLayer] would remove the TextLayer."},
    {"function": "RepositionText[layerName, posX, posY]", "description": "Reposition text to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position (in mm) [float]", "posY": "New y-axis postiion (in mm) [float]"}, "example": "RepositionText[TextLayer,10,10] would reposition the TextLayer to (10,10) position."},
    {"function": "ResizeText[layerName, fontSize]", "description": "Resize text to desired font size.", "parameters": {"layerName": "Name of layer to resize [str]", "fontSize": "Size of the font in points [int]"}, "example": "ResizeText[TextLayer,30] would resize the TextLayer to font size 30pt."},
    {"function": "RotateText[layerName, angle]", "description": "Rotate text to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new text [float]"}, "example": "RotateText[TextLayer,90] would rotate the TextLayer to 90 angle."},
    
    {"function": "ImportObject[fileName, layerName]", "description": "Import image or object from file path.", "parameters": {"fileName": "Name of file to import (need to give the full path of the file) [str]", "layerName": "Name of layer to import file [str]"}, "example": "ImportObject[/path/to/myImage.jpg,ObjectLayer] would import myImage.jpg to ObjectLayer."},
    {"function": "OpacityObject[layerName, opacity]", "description": "Adjust opacity of object.", "parameters": {"layerName": "Name of layer to adjust opacity [str]", "opacity": "Opacity value (0-100) [int]"}, "example": "OpacityObject[ObjectLayer,20] would adjust the opacity of ObjectLayer to 20%."},
    {"function": "RemoveObject[layerName]", "description": "Remove object.", "parameters": {"layerName": "Name of layer to remove [str]"}, "example": "RemoveObject[ObjectLayer] would remove the ObjectLayer."},
    {"function": "RepositionObject[layerName, posX, posY]", "description": "Reposition object to desired x and y-axis position.", "parameters": {"layerName": "Name of layer to reposition [str]", "posX": "New x-axis position [float]", "posY": "New y-axis postiion [float]"}, "example": "RepositionObject[ObjectLayer,10,10] would reposition the ObjectLayer to (10,10) position."},
    {"function": "ResizeObject[layerName, width, height]", "description": "Resize object to desired width and height.", "parameters": {"layerName": "Name of layer to resize [str]", "width": "Width of new object [float]", "height": "Height of new object [float]"}, "example": "ResizeObject[ObjectLayer,30,30] would resize the ObjectLayer to width 30 and height 30."},
    {"function": "RotateObject[layerName, angle]", "description": "Rotate object to desired angle.", "parameters": {"layerName": "Name of layer to rotate [str]", "angle": "Angle of new object [float]"}, "example": "RotateObject[ObjectLayer,90] would rotate the ObjectLayer to 90 angle."},
    
    {"function": "AdjustBC[layerName, brightness, contrast]", "description": "Adjust brightness and contrast level of object (used for adjusting colors).", "parameters": {"layerName": "Name of layer to adjust brightness and contrast [str]", "brightness": "Brighness of new object (-150-+150) [int]", "contrast": "Contrast of new object (-100-+100) [int]"}, "example": "AdjustBC[ObjectLayer,50,50] would adjust the brightness and contrast level of ObjectLayer to 50 and 50."},
    {"function": "AdjustBW[layerName]", "description": "Change object to black & white.", "parameters": {"layerName": "Name of layer to change to black & white [str]"}, "example": "AdjustBW[ObjectLayer] would change the ObjectLayer to be black & white."},
    {"function": "AdjustHSL[layerName, hue, saturation, light]", "description": "Adjust hue, saturation, and lightness level of object (used for adjusting colors).", "parameters": {"layerName": "Name of layer to adjust hue, saturation, and lightness [str]", "hue": "Hue of new object (-180-+180) [int]", "saturation": "Saturation of new object (-100-+100) [int]", "light": "Lightness of new object (-100-+100) [int]"}, "example": "AdjustHSL[ObjectLayer,50,50,50] would adjust the hue, saturation, and lightness level of ObjectLayer to 50, 50, and 50."},
    {"function": "BlurObject[layerName, blurAmount]", "description": "Blur object to desired amount.", "parameters": {"layerName": "Name of layer to blur [str]", "blurAmount": "Blur intensity of new object (0-100) [int]"}, "example": "BlurObject[ObjectLayer,20] would adjust blur the ObjectLayer to 20%."},
    {"function": "PhotoFilter[layerName, filterType, density]", "description": "Apply photo filter to object with desired density.", "parameters": {"layerName": "Name of layer to apply filter [str]", "filterType": "Type of filter (available filters are: \"Warming Filter (85)\", \"Warming Filter (LBA)\", \"Warming Filter (81)\", \"Cooling Filter (80)\", \"Cooling Filter (LBB)\", \"Cooling Filter (82)\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Violet\", \"Magenta\", \"Sepia\", \"Deep Red\", \"Deep Blue\", \"Deep Emerald\", \"Deep Yellow\", \"Underwater\", \"Blue\u201d) [str]", "density": "Density of filter (0-100) [int]"}, "example": "PhotoFilter[ObjectLayer,Warming Filter (85),20] would apply the Warming Filter (85) filter to ObjectLayer with intensity of 20%."},
    {"function": "GlassFilter[layerName, distortion, smoothness, scaling]", "description": "Apply glass filter to object with desired distortion, smoothness, and scaling.", "parameters": {"layerName": "Name of layer to apply glass filter [str]", "distortion": "Intensity of glass effect (0-20) [int]", "smoothness": "Smoothness of glass texture, where lower means rougher and higher means smoother texture (1-15) [int]", "scaling": "Size of the texture pattern used in the glass effect (50-200) [int]"}, "example": "GlassFilter[ObjectLayer,2,10,50] would apply the glass filter to ObjectLayer with distortion 2, smoothness 10, and scaling 50."},
    {"function": "GlowFilter[layerName, graininess, glowAmount, clearAmount]", "description": "Apply glow filter to object with desired graininess, glow amount, and clear amount.", "parameters": {"layerName": "Name of layer to apply glow filter [str]", "graininess": "Amount of noise or grain added to the object (0-10) [int]", "glowAmount": "Intensity of glow effect (0-20) [int]", "clearAmount": "Clarity of the object in the areas not affected by the glow (0-20) [int]"}, "example": "GlowFilter[ObjectLayer,5,10,10] would apply the glow filter to ObjectLayer with graininess 5, glow amount 10, and clear amount 10."},
    {"function": "OceanRippleFilter[layerName, rippleSize, rippleMagnitude]", "description": "Apply ocean ripple filter to object with desired size and magnitude.", "parameters": {"layerName": "Name of layer to apply ocean ripple filter [str]", "rippleSize": "Size of the ripples created, where lower means smaller and finer ripples that creates more subtle water effect (1-15) [int]", "rippleMagnitude": "Intensity of the ripples (0-20) [int]"}, "example": "OceanRippleFilter[ObjectLayer,10,10] would apply the ocean ripple filter to ObjectLayer with size 10 and magnitude 10."},
    {"function": "StainedGlassFilter[layerName, cellSize, borderThickness, lightIntensity]", "description": "Apply stained glass filter to object with desired cell size, thickness, and light intensity.", "parameters": {"layerName": "Name of layer to apply stained glass filter [str]", "cellSize": "Size of individual mosaic cells created, where lower means smaller finer cells (2-50) [int]", "borderThickness": "Thickness of the borders between the mosaic cells (1-20) [int]", "lightIntensity": "Brightness of the light that seems to shine through the stained glass, where lower means darker (0-10) [int]"}, "example": "StainedGlassFilter[ObjectLayer,2,10,5] would apply the stained glass filter to ObjectLayer with cell size 2, border thickness 10, and light intensity as 5."},
    {"function": "PatchworkFilter[layerName, squareSize, relief]", "description": "Apply patchwork filter to object with desired square size and relief level.", "parameters": {"layerName": "Name of layer to apply patchwork filter [str]", "squareSize": "Size of the squares in the filter (0-10) [int]", "relief": "Depth or 3D effect of the patchwork, where lower means flatter appearance with less depth and higher means more shadow and 3D look (0-25)"}, "example": "PatchworkFilter[ObjectLayer,5,10] would apply the patchwork filter to ObjectLayer with square size 5 and relief 10."},
    {"function": "WatercolorFilter[layerName, brushDetail, shadowIntensity, texture]", "description": "Apply watercolor filter to object with desired brish size, shadow intensity, and texture.", "parameters": {"layerName": "Name of layer to apply watercolor filter [str]", "brushDetail": "Level of detail in the brush strokes (1-14) [int]", "shadowIntensity": "Strength and prominence of shadows in the object, where lower makes it more washed out (0-15) [int]", "texture": "Texture of the watercolor paper effect (1-3) [int]"}, "example": "WatercolorFilter[ObjectLayer,5,5,2] would apply the watercolor filter to ObjectLayer with brush size as 5, shadow intensity as 5, and texture as 2."}
]